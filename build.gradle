apply plugin: 'war'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'com.epam.khrapavitski.util'

buildscript {
    repositories {
        maven {url "https://plugins.gradle.org/m2/"}
        maven {url uri('../repo')}
    }
    dependencies {
        classpath 'gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.2.1'
        classpath 'org.postgresql:postgresql:9.4.1208'
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.5'
        classpath 'com.epam.khrapavitski:gradle-project-util:0.0.1'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    repositories {
        jcenter()
        mavenCentral()
    }

    task wrapper(type: Wrapper) { gradleVersion = '2.14' }

    dependencies { testCompile 'junit:junit:4.12' }
}

gradleUtil {
    wsdls {
        wsdl {
            url = project.ext.properties['gradle-project-util.wsdlUrl.weather']
            fileName = project.ext.properties['gradle-project-util.wsdlName.weather']
            serviceName = project.ext.properties['gradle-project-util.serviceName.weather']
        }
        wsdl {
            url = project.ext.properties['gradle-project-util.wsdlUrl.currency']
            fileName = project.ext.properties['gradle-project-util.wsdlName.currency']
            serviceName = project.ext.properties['gradle-project-util.serviceName.currency']
        }
    }
}

dependencies {
    compile 'org.springframework:spring-core:4.3.0.RELEASE',
            'org.springframework:spring-beans:4.3.0.RELEASE',
            'org.springframework:spring-context:4.3.0.RELEASE',
            'org.springframework:spring-web:4.3.0.RELEASE',
            'org.springframework:spring-tx:4.3.0.RELEASE',
            'org.springframework:spring-jdbc:4.3.0.RELEASE',
            'org.mybatis:mybatis-spring:1.3.0',
            'org.mybatis:mybatis:3.4.0',
            'org.apache.cxf:cxf-rt-transports-http:3.1.6',
            'org.apache.cxf:cxf-rt-frontend-jaxws:3.1.6',
            'org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.6',
            'xerces:xercesImpl:2.11.0',
            'org.postgresql:postgresql:9.4.1208',
            'log4j:log4j:1.2.17',
            project('services:currency'),
            project('services:weather')
    def tomcatVersion = project.ext.properties['tomcat.version']
    tomcat  "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

liquibase {
    activities {
        test {
            changeLogFile project.ext.properties['liquibase.changeLogFile.test']
            url project.ext.properties['db.url']
            username project.ext.properties['db.username']
            password project.ext.properties['db.password']
            liquibaseSchemaName project.ext.properties['liquibase.schemaNameTest']
        }
        production {
            changeLogFile project.ext.properties['liquibase.changeLogFile.production']
            url project.ext.properties['db.url']
            username project.ext.properties['db.username']
            password project.ext.properties['db.password']
            liquibaseSchemaName project.ext.properties['liquibase.schemaNameProduction']
        }
    }
    runList = project.ext.properties['liquibase.activity']
}

tomcat {
    httpPort = 8080
    httpsPort = 8043
    enableSSL = false
    contextPath = 'soap'
    users {
        user {
            username = 'admin'
            password = 'admin'
            roles = ['manager']
        }
    }
}

build{ dependsOn tomcatRun }

tomcatRun{ dependsOn update }

update{ dependsOn sortProperties }

clean{ dependsOn cleanServices}

compileJava{dependsOn wsdl2Java}
