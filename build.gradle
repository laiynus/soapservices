apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'com.bmuschko.tomcat'

build.dependsOn(tomcatRun.dependsOn(update))

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework:spring-core:4.2.6.RELEASE',
            'org.springframework:spring-beans:4.2.6.RELEASE',
            'org.springframework:spring-context:4.2.6.RELEASE',
            'org.springframework:spring-web:4.2.6.RELEASE',
            'org.springframework:spring-tx:4.2.6.RELEASE',
            'org.springframework:spring-jdbc:4.2.6.RELEASE',
            'org.mybatis:mybatis-spring:1.2.5',
            'org.mybatis:mybatis:3.3.1',
            'org.apache.cxf:cxf-rt-transports-http:3.0.5',
            'org.apache.cxf:cxf-rt-frontend-jaxws:3.0.5',
            'org.apache.cxf:cxf-rt-frontend-jaxrs:3.0.5',
            'xerces:xercesImpl:2.11.0',
            'org.postgresql:postgresql:9.4.1208',
            'log4j:log4j:1.2.17',
            project('services:currency'),
            project('services:weather')
    testCompile 'junit:junit:4.12'
    def tomcatVersion = project.ext.properties['tomcat.version']
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.2.1'
    classpath 'org.postgresql:postgresql:9.4.1208'
    classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.5'
  }
}

liquibase {
  activities {
    main {
      changeLogFile project.ext.properties['db.changeLogFile']
      url project.ext.properties['db.url']
      username project.ext.properties['db.username']
      password project.ext.properties['db.password']
    }
  }
}

tomcat {
    httpPort = 8080
    httpsPort = 8043
    enableSSL = false
    contextPath = 'soap'
    users {
        user {
            username = 'admin'
            password = 'admin'
            roles = ['manager']
        }
    }
}

task sortProperties << {
    File propertiesFile = new File("$projectDir/gradle.properties")
    def props = new Properties()
    props.load(propertiesFile.newDataInputStream())
    if(!project.hasProperty("direction")){
       props = props.sort{a,b -> a.getKey() <=> b.getKey()}
    }else{
        if("$direction"=="desc"){
            props = props.sort{a,b -> b.getKey() <=> a.getKey()}
        }else{
            props = props.sort{a,b -> a.getKey() <=> b.getKey()}
        }
    }
    props.each{k, v -> println "${k}:${v}"}
    propertiesFile.withWriter{ out -> props.each {out.println it} }
}
